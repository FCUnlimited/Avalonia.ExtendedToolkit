<Styles
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="clr-namespace:Avalonia.ExtendedToolkit.Controls;assembly=Avalonia.ExtendedToolkit"
    xmlns:converters="clr-namespace:Avalonia.ExtendedToolkit.Converters;assembly=Avalonia.ExtendedToolkit"
    xmlns:System="clr-namespace:System;assembly=mscorlib">
  <Styles.Resources>
    <converters:ThicknessToDoubleConverter x:Key="BorderThicknessToStrokeThicknessConverter" TakeThicknessSide="Left" />

    <!--<ControlTemplate x:Key="ChromelessButtonTemplate">
            <Grid Background="{TemplateBinding Background}">
              <ContentPresenter x:Name="PART_ContentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                Opacity="0.75" />
            </Grid>
    </ControlTemplate>-->
  </Styles.Resources>

  <Style Selector="TemplatedControl.FlatButtonFocusVisualStyle">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="2"
                     Stroke="{DynamicResource MahApps.Brushes.FlatButton.Foreground}"
                     StrokeDashArray="1 2"
                     StrokeThickness="1"
                     UseLayoutRounding="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  
  <!--use metrobutton style as default button style-->
  <!--<Style Selector="Button">
    <Setter Property="Background" Value="{DynamicResource ThemeBackgroundBrush}"/>
    <Setter Property="Foreground" Value="{DynamicResource ThemeForegroundBrush}"/>
  </Style>-->

  <Style Selector="Button.MetroFlatButton">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.FlatButton.Background}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="FontSize" Value="{DynamicResource MahApps.Sizes.Font.FlatButton}" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.FlatButton.Foreground}" />
    <Setter Property="Padding" Value="10 5 10 5" />

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Border x:Name="Border"
                  Margin="0"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Background="{TemplateBinding Background}">

            <Controls:ContentControlEx x:Name="PART_ContentPresenter"
                                       Padding="{TemplateBinding Padding}"
                                       HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Content="{TemplateBinding Content, Mode=TwoWay}"
                                       ContentCharacterCasing="Normal"
                                       ContentTemplate="{TemplateBinding ContentTemplate}"
                                       RecognizesAccessKey="True" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style Selector="Button.MetroFlatButton:pointerover">
    <Setter Property="Background" Value="DarkGray" />
  </Style>

  <Style Selector="Button.MetroFlatButton:pressed">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.FlatButton.PressedBackground}" />
    <Setter Property="Foreground" Value="{DynamicResource  MahApps.Brushes.FlatButton.PressedForeground}" />
  </Style>

  <Style Selector="Button.MetroFlatButton:disabled">
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray10}" />
  </Style>

  <Style Selector="ToggleButton.MetroFlatToggleButton">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.FlatButton.Background}" />
    <Setter Property="BorderThickness" Value="0" />

    <!--<Setter Property="FocusVisualStyle" Value="{DynamicResource MahApps.Metro.Styles.FlatButtonFocusVisualStyle}" />-->
    <Setter Property="FontSize" Value="{DynamicResource MahApps.Sizes.Font.FlatButton}" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.FlatButton.Foreground}" />
    <Setter Property="Padding" Value="10 5 10 5" />
    <!--<Setter Property="SnapsToDevicePixels" Value="True" />-->
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Border x:Name="Border"
                  Margin="0"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <Controls:ContentControlEx x:Name="PART_ContentPresenter"
                                       Padding="{TemplateBinding Padding}"
                                       HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Content="{TemplateBinding Content}"
                                       ContentTemplate="{TemplateBinding ContentTemplate}"
                                       RecognizesAccessKey="True" />
            <!--ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.ContentCharacterCasing)}"-->
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style Selector="ToggleButton.MetroFlatToggleButton:checked">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.FlatButton.PressedForeground}" />
  </Style>

  <Style Selector="ToggleButton.MetroFlatToggleButton:pointerover:unchecked:pointerover">
    <Setter Property="Background" Value="DarkGray" />
  </Style>

  <Style Selector="ToggleButton.MetroFlatToggleButton:pointerover:checked:pointerover">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent2}" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.FlatButton.PressedForeground}" />
  </Style>

  <Style Selector="ToggleButton.MetroFlatToggleButton:pressed:checked:pressed">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.FlatButton.PressedBackground}" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.FlatButton.PressedForeground}" />
  </Style>

  <Style Selector="ToggleButton.MetroFlatToggleButton:pressed:checked">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent3}" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.FlatButton.PressedForeground}" />
  </Style>

  <Style Selector="ToggleButton.MetroFlatToggleButton:disabled">
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray2}" />
  </Style>

  <Style Selector="Controls|MetroButton.MetroCircleButtonStyle">
    <!--<Setter Property="Background" Value="Transparent" />-->
    <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray3}" />
    <Setter Property="BorderThickness" Value="2" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid>
            <Ellipse Fill="{TemplateBinding Background}" StrokeThickness="0" />
            <Ellipse x:Name="ellipsebg"
                     Fill="{DynamicResource BlackBrush}"
                     Opacity="0"
                     StrokeThickness="0" />
            <Ellipse x:Name="ellipse"
                     Stroke="{TemplateBinding BorderBrush}" />
            <ContentPresenter x:Name="PART_ContentPresenter"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Content="{TemplateBinding Content}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalContentAlignment" Value="Center" />
  </Style>

  <Style Selector="Controls|MetroButton.MetroCircleButtonStyle:pressed /template/ Ellipse#ellipsebg">
    <Style.Animations>
      <Animation Duration="0:0:0.5">
        <KeyFrame Cue="0%">
          <Setter Property="Opacity" Value="0" />
        </KeyFrame>
        <KeyFrame Cue="90%">
          <Setter Property="Opacity" Value="0.3" />
        </KeyFrame>
        <KeyFrame Cue="100%">
          <Setter Property="Opacity" Value="0" />
        </KeyFrame>
      </Animation>
    </Style.Animations>
  </Style>

  <Style Selector="Controls|MetroButton.MetroCircleButtonStyle:pointerover /template/ Ellipse#ellipsebg">
    <Setter  Property="Opacity" Value="1" />
  </Style>

  <Style Selector="Controls|MetroButton.MetroCircleButtonStyle:pointernotover /template/ Ellipse#ellipsebg">
    <Setter  Property="Opacity" Value="0.7" />
  </Style>

  <Style Selector="Controls|MetroButton.MetroCircleButtonStyle /template/ ContentPresenter#PART_ContentPresenter">
    <Setter Property="TextBox.Foreground" Value="{DynamicResource MahApps.Brushes.Gray7}" />
  </Style>

  <Style Selector="Button.ChromelessButtonStyle">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.TransparentWhite}" />
    <Setter Property="Foreground" Value="{DynamicResource ThemeForegroundColor}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid Background="{TemplateBinding Background}">
            <ContentPresenter x:Name="PART_ContentPresenter"
                              Margin="{TemplateBinding Padding}"
                              Content="{TemplateBinding Content}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Opacity="0.75" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style Selector="Button.ChromelessButtonStyle:pointerover /template/ ContentPresenter#PART_ContentPresenter">
    <Setter Property="Opacity" Value="1" />
    <!--<Setter Property="Background" Value="Green" />-->
  </Style>

  <Style Selector="Button.ChromelessButtonStyle:pointernotover /template/ ContentPresenter#PART_ContentPresenter">

    <Setter Property="Opacity" Value="0.5" />
  </Style>

  <Style Selector="Button.ChromelessButtonStyle:disabled">
    <Setter Property="Foreground" Value="#ADADAD" />
  </Style>

  <!--  base button style for min, max and close window buttons  -->
  <Style  Selector="Button.BaseMetroWindowButtonStyle">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.TransparentWhite}" />
    <Setter Property="Foreground" Value="{DynamicResource ThemeForegroundColor}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid Background="{TemplateBinding Background}">
            <ContentControl x:Name="PART_ContentPresenter"
                                       Padding="{TemplateBinding Padding}"
                                       HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Content="{TemplateBinding Content}"
                                       Background="{TemplateBinding Background}"
                                       ContentTemplate="{TemplateBinding ContentTemplate}"
                                       Opacity="0.6" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalContentAlignment" Value="Center" />
  </Style>

  <Style Selector="Button.BaseMetroWindowButtonStyle:pointerover /template/ ContentControl#PART_ContentPresenter">
    <Setter Property="Opacity" Value="1" />
  </Style>

  <Style Selector="Button.BaseMetroWindowButtonStyle:pointerover">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.SemiTransparentWhite}" />
  </Style>

  <Style Selector="Button.BaseMetroWindowButtonStyle:pressed">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
    <Setter Property="Foreground" Value="White" />
  </Style>

  <Style Selector="Button.BaseMetroWindowButtonStyle:disabled">
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForegroundDisabled}" />
  </Style>

  <Style Selector="Button.LightMetroWindowButtonStyle">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="MaxHeight" Value="34" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Width" Value="34" />
  </Style>

  <Style Selector="Button.LightMetroWindowButtonStyle:pointerover">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.SemiTransparentWhite}" />
  </Style>

  <Style Selector="Button.LightMetroWindowButtonStyle:pressed">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
    <Setter Property="Foreground" Value="White" />
  </Style>

  <Style Selector="Button.LightMetroWindowButtonStyle:disabled">
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForegroundDisabled}" />
  </Style>

  <Style Selector="Button.DarkMetroWindowButtonStyle">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="MaxHeight" Value="34" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Width" Value="34" />
  </Style>

  <Style Selector="Button.DarkMetroWindowButtonStyle:pointerover">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.SemiTransparentGrey}" />
  </Style>

  <Style Selector="Button.DarkMetroWindowButtonStyle:pressed">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
    <Setter Property="Foreground" Value="White" />
  </Style>

  <Style Selector="Button.DarkMetroWindowButtonStyle:disabled">
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.DarkIdealForegroundDisabled}" />
  </Style>

  <!--MahApps.Metro.Styles.WindowButton.Close.Light.Win10-->
  <!--MahApps.Metro.Styles.WindowButton.Close.Dark.Win10-->

  <!--  style for default button  -->
  <Style Selector="Controls|MetroButton">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray10}" />
    <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="ContentCharacterCasing" Value="Upper" />
    <Setter Property="CornerRadius" Value="3" />
    <Setter Property="FocusBorderBrush" Value="{DynamicResource MahApps.Brushes.Button.MouseOverBorder}" />
    <Setter Property="FocusBorderThickness" Value="2" />
    <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Default}" />
    <Setter Property="FontSize" Value="{DynamicResource MahApps.Sizes.Font.UpperCaseContent}" />
    <Setter Property="FontWeight" Value="Bold" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Black}" />
    <Setter Property="MinHeight" Value="25" />
    <Setter Property="Padding" Value="5 6" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid>
            <Border x:Name="Border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CornerRadius, Mode=OneWay}" />

            <Border x:Name="DisabledVisualElement"
                    Background="{DynamicResource MahApps.Brushes.Controls.Disabled}"
                    IsHitTestVisible="False"
                    Opacity="0"
                    CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CornerRadius, Mode=OneWay}" />

            <Controls:ContentControlEx x:Name="PART_ContentPresenter"
                                       Margin="{TemplateBinding BorderThickness}"
                                       Padding="{TemplateBinding Padding}"
                                       HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Content="{TemplateBinding Content}"
                                       ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContentCharacterCasing}"
                                       ContentTemplate="{TemplateBinding ContentTemplate}"
                                       RecognizesAccessKey="True" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style Selector="Controls|MetroButton[IsPointerOver=true] /template/ Border#Border">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
  </Style>

  <Style Selector="Controls|MetroButton[IsPressed=true] /template/ Border#Border">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray7}" />
  </Style>

  <!--IsKeyboardFocusWithin-->
  <!--<Style Selector="Button.MetroButton:keypressed? /template/ Border#Border">
    <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush), Mode=OneWay}" />
    <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderThickness), Mode=OneWay}" />
  </Style>-->

  <Style Selector="Controls|MetroButton[IsEnabled=false] /template/ Border#DisabledVisualElement">
    <Setter Property="Opacity" Value="0.7" />
  </Style>

  <Style Selector="Controls|MetroButton[IsEnabled=false] /template/ Controls|ContentControlEx#PART_ContentPresenter">
    <Setter Property="Opacity" Value="0.3" />
  </Style>

  <Style Selector="Controls|SquareButton">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.White}" />
    <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Black}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="ContentCharacterCasing" Value="Lower" />
    <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Default}" />
    <Setter Property="FontWeight" Value="SemiBold" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Black}" />
    <Setter Property="MinHeight" Value="25" />
    <Setter Property="Padding" Value="5 6" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid Background="{TemplateBinding Background}">
            <Border x:Name="Background"
                    Background="{x:Null}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
            <Rectangle x:Name="DisabledVisualElement"
                       Fill="{DynamicResource ControlsDisabledBrush}"
                       IsHitTestVisible="False"
                       Opacity="0" />
            <Controls:ContentControlEx x:Name="PART_ContentPresenter"
                                       Padding="{TemplateBinding Padding}"
                                       HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Content="{TemplateBinding Content}"
                                       ContentTemplate="{TemplateBinding ContentTemplate}"
                                       RecognizesAccessKey="True"
                                       ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContentCharacterCasing}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style Selector="Controls|SquareButton[IsEnabled=false] /template/ Rectangle#DisabledVisualElement">
    <Style.Animations>
      <Animation Duration="00:00:05">
        <KeyFrame Cue="100%">
          <Setter Property="Opacity" Value="0.7" />
        </KeyFrame>
      </Animation>
    </Style.Animations>
  </Style>

  <Style Selector="Controls|SquareButton[IsEnabled=false] /template/ Controls|ContentControlEx#PART_ContentPresenter">
    <Style.Animations>
      <Animation Duration="00:00:05">
        <KeyFrame Cue="100%">
          <Setter Property="Opacity" Value="0.3" />
        </KeyFrame>
      </Animation>
    </Style.Animations>
  </Style>

  <Style Selector="Controls|SquareButton[IsPointerOver=true]">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Black}" />
  </Style>

  <Style Selector="Controls|SquareButton[IsPressed=true]">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Black}" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.White}" />
  </Style>

  <Style Selector="Controls|SquareButton.AccentedSquareButtonStyle">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}" />
  </Style>

  <!--double why-->
  <Style Selector="Controls|SquareButton.AccentedSquareButtonStyle[IsPointerOver=true]">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Black}" />
  </Style>

  <Style Selector="Controls|SquareButton.AccentedSquareButtonStyle[IsPressed=true]">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Black}" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.White}" />
  </Style>


  <Style Selector="Controls|SquareButton.HighlightedSquareButtonStyle">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Highlight}" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid Background="{TemplateBinding Background}">
            <Border x:Name="Background"
                    Background="{x:Null}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
            <Rectangle x:Name="DisabledVisualElement"
                       Fill="{DynamicResource ControlsDisabledBrush}"
                       IsHitTestVisible="False"
                       Opacity="0" />
            <Controls:ContentControlEx x:Name="PART_ContentPresenter"
                                       Padding="{TemplateBinding Padding}"
                                       HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Content="{TemplateBinding Content}"
                                       ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContentCharacterCasing}"
                                       ContentTemplate="{TemplateBinding ContentTemplate}"
                                       RecognizesAccessKey="True" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style Selector="Controls|SquareButton.HighlightedSquareButtonStyle:disabled /template/ Rectangle#DisabledVisualElement">
    <Style.Animations>
      <Animation Duration="00:00:05">
        <KeyFrame Cue="100%">
          <Setter Property="Opacity" Value="0.7" />
        </KeyFrame>
      </Animation>
    </Style.Animations>
  </Style>

  <Style Selector="Controls|SquareButton.HighlightedSquareButtonStyle:disabled /template/ Controls|ContentControlEx#PART_ContentPresenter">
    <Style.Animations>
      <Animation Duration="00:00:05">
        <KeyFrame Cue="100%">
          <Setter Property="Opacity" Value="0.3" />
        </KeyFrame>
      </Animation>
    </Style.Animations>
  </Style>

  <Style Selector="Controls|SquareButton.HighlightedSquareButtonStyle:pointerover">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}" />
  </Style>

  <Style Selector="Controls|SquareButton.HighlightedSquareButtonStyle:pressed">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Black}" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.White}" />
  </Style>

  <Style Selector="ToggleButton.MetroCircleToggleButtonStyle">
    <!--<Setter Property="Background" Value="Transparent" />-->
    <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray3}" />
    <Setter Property="BorderThickness" Value="2" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Black}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="1" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid>
            <Ellipse Fill="{TemplateBinding Background}" StrokeThickness="0" />
            <Ellipse x:Name="ellipsebg"
                     Fill="{DynamicResource AccentColorBrush}"
                     Opacity="0"
                     StrokeThickness="0" />
            <Ellipse x:Name="ellipse"
                     Stroke="{TemplateBinding BorderBrush}" />
            <ContentPresenter x:Name="PART_ContentPresenter"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Content="{TemplateBinding Content}" />
          </Grid>
          <!--<ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="ellipsebg"
                                     Storyboard.TargetProperty="Opacity"
                                     From="0"
                                     To="1"
                                     Duration="0:0:0.3" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.EnterActions>
              -->
          <!--  some out fading  -->
          <!--
              <Trigger.ExitActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="ellipsebg"
                                     Storyboard.TargetProperty="Opacity"
                                     To="0"
                                     Duration="0:0:0.3" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.ExitActions>
              <Setter Property="Foreground" Value="{DynamicResource IdealForegroundColorBrush}" />
              <Setter TargetName="ellipse" Property="Stroke" Value="{DynamicResource AccentColorBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="ellipse" Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
              <Setter TargetName="ellipse" Property="Opacity" Value="0.7" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="PART_ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource GrayBrush7}" />
              <Setter TargetName="ellipse" Property="Opacity" Value="0.3" />
            </Trigger>
          </ControlTemplate.Triggers>-->
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style Selector="ToggleButton.MetroCircleToggleButtonStyle:checked /template/ Ellipse#ellipsebg">
    <Style.Animations>
      <Animation Duration="0:0:0.3">
        <KeyFrame Cue="0%">
          <Setter Property="Opacity" Value="0" />
        </KeyFrame>

        <KeyFrame Cue="100%">
          <Setter Property="Stroke" Value="{DynamicResource MahApps.Brushes.Accent}" />
        </KeyFrame>
      </Animation>
    </Style.Animations>
  </Style>

  <Style Selector="ToggleButton.MetroCircleToggleButtonStyle:checked">
    <Style.Animations>
      <Animation Duration="0:0:0.3">
        <KeyFrame Cue="100%">
          <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}" />
        </KeyFrame>
      </Animation>
    </Style.Animations>
  </Style>

  <Style Selector="ToggleButton.MetroCircleToggleButtonStyle:pointerover /template/ Ellipse#ellipse">
    <Setter  Property="Opacity" Value="1" />
  </Style>

  <Style Selector="ToggleButton.MetroCircleToggleButtonStyle:pointernotover /template/ Ellipse#ellipse">
    <Setter  Property="Opacity" Value="0.7" />
  </Style>

  <Style Selector="ToggleButton.MetroCircleToggleButtonStyle:disabled /template/ Ellipse#ellipse">
    <Setter  Property="Opacity" Value="0.3" />
  </Style>

  <Style Selector="ToggleButton.MetroCircleToggleButtonStyle:disabled /template/ ContentPresenter#PART_ContentPresenter">
    <Setter  Property="TextBox.Foreground"  Value="{DynamicResource MahApps.Brushes.Gray7}" />
  </Style>

  <Style Selector="Controls|MetroToggleButton">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray10}" />
    <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="CornerRadius" Value="3" />
    <Setter Property="FocusBorderBrush" Value="{DynamicResource MahApps.Brushes.Button.MouseOverBorder}" />
    <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Default}" />
    <Setter Property="FontSize" Value="{DynamicResource MahApps.Sizes.Font.UpperCaseContent}" />
    <Setter Property="FontWeight" Value="Bold" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Black}" />
    <Setter Property="MinHeight" Value="25" />
    <Setter Property="Padding" Value="5 6" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Grid>
            <Border x:Name="Border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CornerRadius, Mode=OneWay}" />
            <Border x:Name="DisabledVisualElement"
                    Background="{DynamicResource ControlsDisabledBrush}"
                    CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CornerRadius, Mode=OneWay}"
                    IsHitTestVisible="False"
                    Opacity="0" />
            <Controls:ContentControlEx x:Name="PART_ContentPresenter"
                                       Margin="{TemplateBinding BorderThickness}"
                                       Padding="{TemplateBinding Padding}"
                                       HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Content="{TemplateBinding Content}"
                                       ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContentCharacterCasing}"
                                       ContentTemplate="{TemplateBinding ContentTemplate}"
                                       RecognizesAccessKey="True" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style Selector="Controls|MetroToggleButton[IsChecked=true] /template/ Border#Border">
    <Setter Property="BorderThickness" Value="2" />
  </Style>

  <Style Selector="Controls|MetroToggleButton[IsEnabled=false] /template/ Border#DisabledVisualElement">
    <Setter Property="Opacity" Value="0.7" />
  </Style>

  <Style Selector="Controls|MetroToggleButton[IsEnabled=false] /template/ Controls|ContentControlEx#PART_ContentPresenter">
    <Setter Property="Opacity" Value="0.3" />
  </Style>

  <Style Selector="Controls|MetroToggleButton[IsChecked=true]">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray2}" />
    <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray5}" />
  </Style>

  <Style Selector="Controls|MetroToggleButton[IsPointerOver=true][IsChecked=false]">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
  </Style>

  <Style Selector="Controls|MetroToggleButton[IsPointerOver=true][IsChecked=true]">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray3}" />
  </Style>

  <Style Selector="Controls|MetroToggleButton[IsPressed=true]">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray7}" />
  </Style>

  <!--?-->
  <!--<Trigger Property="IsKeyboardFocusWithin" Value="True">
    <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush), Mode=OneWay}" />
  </Trigger>-->

  <Style Selector="Controls|SquareMetroButton">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Black}" />
    <Setter Property="BorderThickness" Value="2" />
    <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Default}" />
    <Setter Property="FontWeight" Value="SemiBold" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Black}" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="Padding" Value="12 4 12 4" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid>
            <Border x:Name="Border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">

              <Grid>
                <Rectangle x:Name="MouseOverRectangle"
                           Fill="{DynamicResource MahApps.Brushes.White}"
                           Opacity="0" />
                <Rectangle x:Name="PressedRectangle"
                           Fill="{DynamicResource MahApps.Brushes.Black}"
                           Opacity="0" />
                <Controls:ContentControlEx x:Name="PART_ContentPresenter"
                                           Padding="{TemplateBinding Padding}"
                                           HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                           Content="{TemplateBinding Content}"
                                           ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContentCharacterCasing}"
                                           ContentTemplate="{TemplateBinding ContentTemplate}"
                                           RecognizesAccessKey="True" />
              </Grid>
            </Border>

            <Rectangle x:Name="FocusVisualWhite"
                       IsHitTestVisible="False"
                       Opacity="0"
                       Stroke="White"
                       StrokeDashArray="1,1"
                       StrokeDashOffset="1.5"
                       StrokeLineCap="Square" />
            <Rectangle x:Name="FocusVisualBlack"
                       IsHitTestVisible="False"
                       Opacity="0"
                       Stroke="Black"
                       StrokeDashArray="1,1"
                       StrokeDashOffset="0.5"
                       StrokeLineCap="Square" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style Selector="Controls|SquareMetroButton[IsPointerOver=true] /template/ Rectangle#MouseOverRectangle">
    <Style.Animations>
      <Animation Duration="0:0:0.5">
        <KeyFrame Cue="100%">
          <Setter Property="Opacity" Value="0.4" />
        </KeyFrame>
      </Animation>
    </Style.Animations>
  </Style>

  <Style Selector="Controls|SquareMetroButton[IsPressed=true] /template/ Rectangle#PressedRectangle">
    <Style.Animations>
      <Animation Duration="0:0:0.5">
        <KeyFrame Cue="100%">
          <Setter Property="Opacity" Value="1" />
        </KeyFrame>
      </Animation>
    </Style.Animations>
  </Style>

  <Style Selector="Controls|SquareMetroButton[IsFocused=true] /template/ Rectangle#FocusVisualWhite">
    <Style.Animations>
      <Animation Duration="0:0:0.5">
        <KeyFrame Cue="100%">
          <Setter Property="Opacity" Value="1" />
        </KeyFrame>
      </Animation>
    </Style.Animations>
  </Style>

  <Style Selector="Controls|SquareMetroButton[IsFocused=true] /template/ Rectangle#FocusVisualBlack">
    <Style.Animations>
      <Animation Duration="0:0:0.5">
        <KeyFrame Cue="100%">
          <Setter Property="Opacity" Value="1" />
        </KeyFrame>
      </Animation>
    </Style.Animations>
  </Style>

  <Style Selector="Controls|SquareMetroButton[IsEnabled=false] /template/ Border#Border">
    <Style.Animations>
      <Animation Duration="0:0:0.5">
        <KeyFrame Cue="100%">
          <Setter Property="Opacity" Value="0.5" />
        </KeyFrame>
      </Animation>
    </Style.Animations>
  </Style>

  <Style Selector="Controls|SquareMetroButton[IsPressed=true]">
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.White}" />
  </Style>

  <Style Selector="Controls|SquareMetroButton.MetroAccentButton">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
    <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.AccentSelectedColor}" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.AccentSelectedColor}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid>
            <Border x:Name="Border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">

              <Grid>
                <Rectangle x:Name="MouseOverRectangle"
                           Fill="{DynamicResource BlackBrush}"
                           Opacity="0" />
                <Rectangle x:Name="PressedRectangle"
                           Fill="White"
                           Opacity="0" />
                <Controls:ContentControlEx x:Name="PART_ContentPresenter"
                                           Padding="{TemplateBinding Padding}"
                                           HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                           Content="{TemplateBinding Content}"
                                           ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContentCharacterCasing}"
                                           ContentTemplate="{TemplateBinding ContentTemplate}"
                                           RecognizesAccessKey="True" />
              </Grid>
            </Border>

            <Rectangle x:Name="FocusVisualWhite"
                       IsHitTestVisible="False"
                       Opacity="0"
                       Stroke="White"
                       StrokeDashArray="1,1"
                       StrokeDashOffset="1.5"
                       StrokeLineCap="Square" />
            <Rectangle x:Name="FocusVisualBlack"
                       IsHitTestVisible="False"
                       Opacity="0"
                       Stroke="Black"
                       StrokeDashArray="1,1"
                       StrokeDashOffset="0.5"
                       StrokeLineCap="Square" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style Selector="Controls|SquareMetroButton.MetroAccentButton[IsPointerOver=true] /template/ Rectangle#MouseOverRectangle">
    <Style.Animations>
      <Animation Duration="0:0:0.5">
        <KeyFrame Cue="100%">
          <Setter Property="Opacity" Value="0.4" />
        </KeyFrame>
      </Animation>
    </Style.Animations>
  </Style>

  <Style Selector="Controls|SquareMetroButton.MetroAccentButton[IsPressed=true] /template/ Rectangle#PressedRectangle">
    <Style.Animations>
      <Animation Duration="0:0:0.5">
        <KeyFrame Cue="100%">
          <Setter Property="Opacity" Value="1" />
        </KeyFrame>
      </Animation>
    </Style.Animations>
  </Style>

  <Style Selector="Controls|SquareMetroButton.MetroAccentButton[IsEnabled=false] /template/ Border#Border">
    <Style.Animations>
      <Animation Duration="0:0:0.5">
        <KeyFrame Cue="100%">
          <Setter Property="Opacity" Value="0.5" />
        </KeyFrame>
      </Animation>
    </Style.Animations>
  </Style>
  <Style Selector="Controls|SquareMetroButton.MetroAccentButton[IsFocused=true] /template/ Rectangle#FocusVisualWhite">
    <Style.Animations>
      <Animation Duration="0:0:0.5">
        <KeyFrame Cue="100%">
          <Setter Property="Opacity" Value="1" />
        </KeyFrame>
      </Animation>
    </Style.Animations>
  </Style>

  <Style Selector="Controls|SquareMetroButton.MetroAccentButton[IsFocused=true] /template/ Rectangle#FocusVisualBlack">
    <Style.Animations>
      <Animation Duration="0:0:0.5">
        <KeyFrame Cue="100%">
          <Setter Property="Opacity" Value="1" />
        </KeyFrame>
      </Animation>
    </Style.Animations>
  </Style>

  <Style Selector="Controls|SquareMetroButton.MetroAccentButton[IsPressed=true]">
    <Setter Property="Foreground" Value="Black" />
  </Style>
</Styles>