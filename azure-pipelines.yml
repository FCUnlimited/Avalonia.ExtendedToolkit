# .NET Multienvironment


trigger:
- master

strategy:
  matrix:
    linux:
     ridId: 'linux'
     imageName: 'ubuntu-latest'
    #mac:
    # ridId: 'macos'
    # imageName: 'macos-10.14'
    windows:
      ridId: 'win-x86'
      imageName: 'windows-latest'

pool:
  vmImage: $(imageName)

variables:
  project: '**/*.csproj'
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  BuildConfiguration: 'Release'
  
  Major: '0'
  Minor: '0'
  Patch: '1'

steps:

- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '3.1.x'
    workingDirectory: '$(System.DefaultWorkingDirectory)'


- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
    feedsToUse: 'select'
    workingDirectory: '$(System.DefaultWorkingDirectory)'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  inputs:
   command: 'pack'
   packagesToPack: '**/*.csproj'
   nobuild: true
   arguments: |
              '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory) '
              '-p:PackageVersion=$(Major).$(Minor).$(Patch)'
   versioningScheme: 'byPrereleaseNumber'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop-$(ridId)'
    publishLocation: 'Container'







